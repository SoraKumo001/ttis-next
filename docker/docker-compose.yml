version: "3.7"
services:
  ttis-caddy:
    container_name: ttis-caddy
    image: ttis-caddy
    build: 
      context: "."
      dockerfile: "./Dockerfile_caddy"   
    ports:
      - "127.0.0.1:8080:80"
    volumes:
      - socket-vol:/var/run/socks
    restart: always
  ttis-redis:
    container_name: ttis-redis
    image: ttis-redis
    build: 
      context: "."
      dockerfile: "./Dockerfile_redis"      
    volumes:
      - socket-vol:/data
      - socket-vol:/var/run/socks
    restart: always
  ttis-postgres:
    container_name: ttis-postgresql
    image: postgres:alpine
    environment:
      POSTGRES_DB: ttis
      POSTGRES_USER: ttis
      POSTGRES_PASSWORD: test
    volumes:
      - postgresql-vol:/var/lib/postgresql/data
      - socket-vol:/var/run/postgresql
    # ports:
    #   - 5432:5432
    restart: always
  ttis-back:
    image: ttis-back
    container_name: ttis-back
    build:
      context: "../ttis-back"
      dockerfile: "../docker/Dockerfile_back"
    depends_on:
      - ttis-postgres
    volumes:
      - socket-vol:/var/run/socks
    restart: always
  ttis-front:
    image: ttis-front
    container_name: ttis-front
    build:
      context: "../ttis-front"
      dockerfile: "../docker/Dockerfile_front"
    depends_on:
      - ttis-redis
    volumes:
      - /var/share/nginx:/var/share/nginx
      - socket-vol:/var/run/socks
    command: sh -c "cp -rf .next/static /var/share/nginx && yarn start" 
    restart: always
volumes:
  socket-vol:
  postgresql-vol:
  redis-vol:
