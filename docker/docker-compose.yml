version: "3.7"
services:
  nginx:
    container_name: web-server
    build: 
      context: "."
      dockerfile: "./Dockerfile_nginx"   
    ports:
      - "80:80"
    volumes:
      - socket-vol:/var/run/socks
    # restart: always
  redis:
    container_name: redis-server
    build: 
      context: "."
      dockerfile: "./Dockerfile_redis"      
    volumes:
      - redis-vol:/data
      - socket-vol:/var/run/socks
    # restart: always
    command: redis-server /etc/redis.conf
  postgres:
    container_name: postgresql-server
    image: postgres:latest
    environment:
      POSTGRES_DB: ttis
      POSTGRES_USER: ttis
      POSTGRES_PASSWORD: test
    volumes:
      - postgresql-vol:/var/lib/postgresql/data
      - socket-vol:/var/run/postgresql
    # ports:
    #   - 5432:5432
    # restart: always
  ttis-back:
    container_name: ttis-back
    build:
      context: "../ttis-back"
      dockerfile: "../docker/Dockerfile_back"
    depends_on:
      - "postgres"
    volumes:
      - socket-vol:/var/run/socks
    # restart: always
  ttis-front:
    container_name: ttis-front
    build:
      context: "../ttis-front"
      dockerfile: "../docker/Dockerfile_front"
    depends_on:
      - "redis"
    volumes:
      - socket-vol:/var/run/socks
  #   # restart: always
volumes:
  postgresql-vol:
  redis-vol:
  node_modules-front-vol:
  node_modules-back-vol:
  socket-vol:
    driver: local
