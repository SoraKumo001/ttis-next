version: "3.7"
services:
  nginx:
    container_name: web-server
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./etc/nginx:/etc/nginx/conf.d
      - socket-vol:/var/run/socks
    restart: always
  redis:
    container_name: redis-server
    image: "redis:latest"
    volumes:
      - ./etc/redis/redis.conf:/etc/redis.conf
      - redis-vol:/data
      - socket-vol:/var/run/socks
    restart: always
    command: redis-server /etc/redis.conf
  ttis-back:
    container_name: ttis-back
    image: node:latest
    volumes:
      - ../ttis-back:/src
      - socket-vol:/var/run/socks
      - node_modules-back-vol:/src/node_modules
    restart: always
    working_dir: /src
    command: >
      bash -c "yarn && yarn build && yarn start"
  ttis-front:
    container_name: ttis-front
    image: node:latest
    volumes:
      - ../ttis-front:/src
      - socket-vol:/var/run/socks
      - node_modules-front-vol:/src/node_modules
    restart: always
    working_dir: /src
    command: >
      bash -c "yarn && yarn build && yarn start"
  postgres:
    container_name: postgresql-server
    image: postgres:latest
    environment:
      POSTGRES_DB: ttis
      POSTGRES_USER: ttis
      POSTGRES_PASSWORD: test
    volumes:
      - postgresql-vol:/var/lib/postgresql/data
      - socket-vol:/var/run/postgresql
    ports:
      - 5432:5432
    restart: always
volumes:
  postgresql-vol:
  redis-vol:
  node_modules-front-vol:
  node_modules-back-vol:
  socket-vol:
    driver: local
